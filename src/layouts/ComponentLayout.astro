---
import ThemeIcon from '@/components/theme/ThemeIcon.astro'
import ThemeInit from '@/components/theme/ThemeInit.astro'
import { site } from '@/data/site'
import '@fontsource-variable/inter'
import '@fontsource-variable/montserrat'
import { SEO, type Props as SEOProps } from 'astro-seo'
import { ViewTransitions } from 'astro:transitions'

interface Props {
	seo: SEOProps
}

const { seo } = Astro.props

const components = await Astro.glob('../pages/components/*.astro')

function removeUntilLastSlash(mainString: string, removeString: string) {
	// Find the index of the last slash
	const lastSlashIndex = mainString.lastIndexOf('/')

	// Check if the removeString is found before the last slash
	const indexToRemove = mainString.indexOf(removeString)
	if (indexToRemove !== -1 && indexToRemove < lastSlashIndex) {
		// Extract the substring after the last slash
		return mainString.substring(lastSlashIndex + 1)
	} else {
		// If removeString is not found or found after the last slash, return the original string
		return mainString
	}
}

function extractComponent(file: string) {
	let noPath = removeUntilLastSlash(file, '/')
	let result = noPath.slice(0, -6)
	return result
}
---

<html lang={site.language}>
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<link rel="sitemap" href="/sitemap-index.xml" />
		<SEO
			title={seo?.title ?? site.title}
			description={seo?.description ?? site.description}
			openGraph={{
				basic: {
					title: seo?.title || site.title,
					type: 'website', // https://ogp.me/#types
					image: site.opengraph.image || '/open-graph.jpg',
				},
			}}
			{...seo}
		/>
		<ThemeInit />
		<ViewTransitions />
	</head>
	<body
		class:list={[
			// {
			// 	'[&_*]:outline [&_*]:outline-1 [&_*]:outline-red-300':
			// 		process.env.NODE_ENV === 'development'
			// },
			'mx-auto flex h-screen flex-col p-10 font-sans transition-all duration-300',
			'bg-color-white text-color-black',
			'dark:bg-color-black dark:text-color-white',
		]}
	>
		<header class:list={['flex w-full flex-row justify-between', 'mb-10 mt-1']}>
			<a href="/components" class="z-40">
				<h2
					class:list={[
						'border-2 border-color-black p-2 font-logo text-2xl font-black uppercase no-underline dark:border-color-white',
						'transition-all duration-300 ease-out',
						'text-color-black dark:text-color-white',
						'hover:bg-color-black hover:text-color-white',
						'dark:hover:bg-color-white dark:hover:text-color-black',
					]}
				>
					{site.title} Components
				</h2>
			</a>
			<h1 class="px-2 font-logo text-2xl font-black uppercase">{seo?.title}</h1>
		</header>
		<!-- <main class="w-full flex-grow"> -->
		<main class:list={['grid', 'h-fit w-full flex-grow']}>
			<slot />
		</main>
		<footer class="mt-10 flex flex-row justify-between">
			<ul class="flex flex-row gap-x-6 uppercase">
				{
					components.map(component => (
						<li>
							<a class="font-heading text-2xl font-black" href={component.url}>
								{extractComponent(component.file)}
							</a>
						</li>
					))
				}
			</ul>
			<ThemeIcon />
		</footer>
	</body>
</html>
