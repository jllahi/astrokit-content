---
import type { HTMLAttributes } from 'astro/types'
import { tv, type VariantProps } from 'tailwind-variants'

const buttonTv = tv({
	base: 'rounded transition-all duration-500 ease-out',
	variants: {
		intent: {
			primary: 'border-transparent bg-blue-500 text-white hover:bg-blue-800',
			secondary: 'border-gray-400 bg-white text-gray-800 hover:bg-gray-100',
			accent:
				'bg-color-accent hover:bg-color-accent-dark border-transparent text-white',
			ghost: [
				'border border-transparent bg-transparent text-gray-800 hover:border-gray-600',
				'dark:text-gray-300 dark:hover:border-gray-300'
			]
		},
		size: {
			small: 'px-2 py-1 text-sm',
			medium: 'px-4 py-2 text-base',
			large: 'px-8 py-4 text-2xl'
		}
	},
	defaultVariants: {
		size: 'large',
		intent: 'primary'
	},
	compoundVariants: [{ intent: 'primary', size: 'large', class: 'uppercase' }]
})

export interface Props
	extends HTMLAttributes<'button'>,
		VariantProps<typeof buttonTv> {}

const { intent, size, class: className, ...rest } = Astro.props
---

<button
	class={buttonTv({ intent, size, className })}
	data-name="button-tv"
	{...rest}
>
	<slot />
</button>

<script>
	const buttonsTV = document.querySelectorAll('button[data-name="button-tv"]')
	buttonsTV.forEach((btn) =>
		btn.addEventListener('click', () => alert('BANG TV!'))
	)
</script>
