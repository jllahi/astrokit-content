---
import type { HTMLAttributes } from 'astro/types'
import { tv, type VariantProps } from 'tailwind-variants'

export const link = tv({
	base: 'transition-all duration-300 ease-in-out place-content-center p-1 font-logo uppercase',
	variants: {
		intent: {
			outline: 'border border-black hover:bg-black text-black hover:text-white',
			primary: [
				'border border-black hover:bg-black text-black hover:text-white',
				'border dark:text-white dark:border-color-white dark:hover:bg-color-white dark:hover:text-black'
			],
			inverted: [
				'border border-black bg-color-black hover:bg-color-white text-color-white hover:text-color-black',
				'dark:border-color-white dark:bg-color-white dark:hover:bg-color-black dark:text-color-black dark:hover:text-color-white'
			],
			tag: [
				'border-color-black bg-color-white text-black border no-underline px-2 hover:text-white hover:bg-color-black',
				'dark:border-color-white dark:bg-color-black dark:text-white dark:hover:text-black dark:hover:bg-color-white'
			]
		},
		size: {
			sm: 'pb-1 px-2 text-xs font-bold',
			md: 'py-2 px-3 gap-2 text-lg',
			lg: 'py-3 px-4 gap-4 text-xl'
		}
	},
	defaultVariants: {
		size: 'md',
		intent: 'primary'
	}
	// compoundVariants: [{ intent: 'primary', size: 'medium', class: 'uppercase' }]
})

// const { size = 'md', style = 'primary', block, class: className, ...rest } = Astro.props
export interface Props extends HTMLAttributes<'a'>, VariantProps<typeof link> {}

const { intent, size, class: className, ...rest } = Astro.props
---

<a class={link({ intent, size, className })} data-name="ui-link" {...rest}>
	<slot />
</a>
