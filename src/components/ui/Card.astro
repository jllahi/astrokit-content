---
import site from '@/data/site'
import { getDay, getMonth } from '@/utils/content'
import type { HTMLAttributes } from 'astro/types'
import { getImage } from 'astro:assets'
import { getEntry, type CollectionEntry } from 'astro:content'

interface Props extends HTMLAttributes<'article'> {
  post: CollectionEntry<'posts'> //  CollectionEntry<ContentCollectionKey>
  featured?: boolean
}

const { post, featured, ...props } = Astro.props

const optimizedBackground = await getImage({
  src: post.data.image,
  format: 'webp',
  width: featured ? 1200 : 600,
  quality: 85,
})

const relatedCategory = await getEntry(post.data.category)
---

<article
  class:list={[
    'relative flex w-full items-end justify-start bg-gray-200 bg-cover bg-center text-left dark:bg-gray-800',
    // { 'col-span-3': featured }
  ]}
  style={`height: 450px; background-image:url(${optimizedBackground.src});`}
  {...props}
>
  <a
    href={`/${site.urls.posts}/${post.slug}`}
    aria-label={post.data.title}
  >
    <div
      class="absolute bottom-0 left-0 right-0 top-0 mt-20 bg-gradient-to-b from-transparent to-gray-900"
    >
    </div>
    <div class="absolute left-0 right-0 top-0 mx-5 mt-2 flex items-center justify-between">
      <!-- <Link href={`/${site.urls.category}/${relatedCategory.slug}`} size="sm" intent="tag"
				>{relatedCategory.data.title}
			</Link> -->
      <div
        class:list={[
          'border border-color-black bg-color-white px-2 text-black no-underline hover:bg-color-black hover:text-white',
          'dark:border-color-white dark:bg-color-black dark:text-white dark:hover:bg-color-white dark:hover:text-black',
          'px-2 py-1 text-xs font-bold uppercase',
        ]}
      >
        {relatedCategory.data.title}
      </div>
      <div class="font-regular flex flex-col justify-start text-white">
        <span class="leading-0 text-3xl font-semibold drop-shadow-md">{getDay(post.data.date)}</span
        >
        <span class="-mt-3 drop-shadow-md">{getMonth(post.data.date)}</span>
      </div>
    </div>
    <header class="z-10 p-5">
      <a
        href={`/${site.urls.posts}/${post.slug}`}
        class="font-heading text-2xl font-bold leading-7 tracking-tight text-white hover:underline"
        transition:name={`post-title-${post.data.title}`}
      >
        {post.data.title}
        {
          post.data.draft && (
            <span class="mx-2 rounded bg-color-error p-1 text-xs uppercase text-color-white">
              Draft
            </span>
          )
        }
      </a>
    </header>
  </a>
</article>
