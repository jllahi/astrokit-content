---
import { Image } from "astro:assets"
import { getCollection } from "astro:content"

import SITE from "@/data/site.json"
import Layout from "@/components/Layout.astro"
import { formatDate } from "@/utils/content"
import Spotify from "@/components/embed/Spotify.astro"
import FormatDate from "@/components/FormatDate.astro"

// export async function getStaticPaths({ paginate }) {
export async function getStaticPaths() {
	const posts = await getCollection("posts")

	return posts.map((post) => ({
		params: { slug: post.slug },
		props: { post },
	}))
	// return paginate(allPokemon, { pageSize: 10 });
}
// type Props = CollectionEntry<'posts'>
// const post = Astro.props

// const post: CollectionEntry<'blog'> = Astro.props.post

const { post } = Astro.props

const { Content } = await post.render()
---

<Layout
	seo={{
		title: post.data.title,
		description: post.data.description ?? SITE.description,
		openGraph: {
			basic: {
				title: post.data.title,
				type: "article",
				image: post.data.image.src,
			},
		},
	}}
>
	<article
		class="article-grid text-md grid gap-y-4 font-sans leading-relaxed md:gap-y-4 md:text-xl"
	>
		<div>
			<h1>{post.data.title}</h1>

			<Image
				alt={post.data.title}
				src={post.data.image}
				class="w-full object-cover aspect-video"
				width="720"
			/>
		</div>

		<div class="flex flex-row justify-between">
			<FormatDate date={post.data.date} />
			<span></span>
		</div>

		<div class="prose-lg prose-gray">
			<Content components={{ Spotify }} />
		</div>
	</article>
</Layout>
